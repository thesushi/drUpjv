<?php

/**
 * @file
 * Install, update and uninstall functions for the LDAP User module.
 */

/**
 * Implements hook_install().
 */
function ldap_user_install() {

  // foreach (ldap_user_user_entity_fields() as $field_id => $field_conf) {
  //   $field_info = field_info_field($field_id);
  //   if (!$field_info) {
  //     field_create_field($field_conf['field']);
  //     field_create_instance($field_conf['instance']);
  //   }
  // }

  // // make ldap user weight slightly less than other ldap modules so it can load
  // // user's associated ldap data first and save on ldap queries.

  // db_query("UPDATE {system} SET weight = -1 WHERE name = 'ldap_user'");

  // _ldap_user_install_update_authmap();
  \Drupal::service('router.builder')->rebuild();


}

function _ldap_user_install_update_authmap() {
  db_update('authmap')
  ->fields(
    array(
      'module' => 'ldap_user',
    )
  )
  ->condition('module', 'ldap_authentication')
  ->execute();

}

/**
 * Implements hook_uninstall().
 */
function ldap_user_uninstall() {

  // foreach (ldap_user_user_entity_fields() as $field_id => $field_conf) {

  //   $instance = field_info_instance($field_conf['instance']['entity_type'], $field_conf['instance']['field_name'], $field_conf['instance']['bundle']);
  //   if ($instance) {
  //     field_delete_instance($instance);
  //   }

  //   $field_info = field_info_field($field_conf['field']['field_name']);
  //   if ($field_info) {
  //     field_delete_field($field_conf['field']['field_name']);
  //   }
  // }

  // variable_del('ldap_user_conf');
  // variable_del('ldap_user_cron_last_orphan_checked');
  // variable_del('ldap_user_cron_last_uid_checked');

}

/**
 * Implements hook_schema().
 * Taken from https://www.drupal.org/files/drupal-remove_openid_from_core-556380-81.patch
 * Because of http://drupal.stackexchange.com/questions/63121/whats-for-authmap-table-in-drupal
 */
function ldap_user_schema() {
  $schema['ldap_user_identities'] = array(
    'description' => 'Stores LDAP authentication mapping.',
    'fields' => array(
      'aid' => array(
        'description' => 'Primary Key: Unique authmap ID.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => "User's {users}.uid.",
      ),
      'identifier' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique LDAP identifier.',
      ),
      'module' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Module which is controlling the authentication.',
      ),
    ),
    'unique keys' => array(
      'identifier' => array('identifier'),
    ),
    'primary key' => array('aid'),
    'foreign keys' => array(
      'user' => array(
        'table' => 'users',
        'columns' => array('uid' => 'uid'),
      ),
    ),
  );
  return $schema;
}

/**
 * Converts default_file_main variable to config.
 *
 * @ingroup config_upgrade
 */
function ldap_user_update_8001() {
  if (function_exists('update_variables_to_config')) {
    update_variables_to_config('ldap_user.settings', array(
      'ldap_user_cron_last_uid_checked' => 'cron_last_uid_checked',
    ));
  }
}
